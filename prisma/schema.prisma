// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String      @id @default(uuid())
  username    String      @unique
  password    String
  hashedRt    String?
  avatar      String?
  tweetsCount Int
  tweets      Tweet[]
  likes       TweetLike[]
  followers   Follower[]  @relation("follower")
  following   Follower[]  @relation("following")
  retweets    Retweet[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Tweet {
  id            String       @id @default(uuid())
  authorId      String
  author        User         @relation(fields: [authorId], references: [id])
  text          String
  mediaId       String?
  type          String
  tweetParentId String?
  tweetParent   Tweet?       @relation("replies", fields: [tweetParentId], references: [id])
  isDeleted     Boolean      @default(false)
  likesCount    Int          @default(0)
  repliesCount  Int          @default(0)
  retweetCount  Int          @default(0)
  likes         TweetLike[]
  retweets      Retweet[]
  media         TweetMedia[]
  replies       Tweet[]      @relation("replies")
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

model Retweet {
  id        String   @id @default(uuid())
  tweetId   String
  tweet     Tweet    @relation(fields: [tweetId], references: [id])
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}

model TweetMedia {
  id      String @id @default(uuid())
  url     String
  tweetId String
  tweet   Tweet  @relation(fields: [tweetId], references: [id])
}

model TweetLike {
  id        String   @id @default(uuid())
  tweetId   String
  tweet     Tweet    @relation(fields: [tweetId], references: [id])
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())

  @@unique([tweetId, userId])
}

model Follower {
  userId      String
  follower    User     @relation("follower", fields: [userId], references: [id])
  followingId String
  followee    User     @relation("following", fields: [followingId], references: [id])
  createdAt   DateTime @default(now())

  @@id([userId, followingId])
}
